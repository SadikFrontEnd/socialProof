{"version":3,"sources":["views/ui-elements/apps/Campaigns.js","components/reactstrap/modal/ModalSourceCode.js","../node_modules/reactstrap/es/ModalHeader.js","../node_modules/reactstrap/es/ModalBody.js","../node_modules/reactstrap/es/Portal.js","../node_modules/reactstrap/es/Modal.js","../node_modules/reactstrap/es/ModalFooter.js"],"names":["showing","value","label","sortedBy","Compaigns","state","activeTab","modal","toggleTab","tab","setState","toggleModal","prevState","className","lg","md","sm","classNamePrefix","defaultValue","name","options","Ripple","color","onClick","this","isOpen","toggle","caret","size","tag","outline","React","Component","modalBasic","modalCentered","modalBackdrop","modalFade","modalTheme","modalSizes","modalForm","modalDestructuring","modalFocus","propTypes","tagPropType","wrapTag","PropTypes","func","string","cssModule","object","children","node","closeAriaLabel","charCode","oneOfType","number","close","ModalHeader","props","closeButton","Tag","WrapTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeIcon","String","fromCharCode","createElement","type","_extends","defaultProps","ModalBody","isRequired","any","Portal","_React$Component","apply","arguments","_inheritsLoose","_proto","prototype","componentWillUnmount","defaultNode","document","body","removeChild","render","canUseDOM","appendChild","ReactDOM","createPortal","ownKeys","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","noop","FadePropTypes","shape","Fade","bool","autoFocus","centered","scrollable","keyboard","role","labelledBy","backdrop","oneOf","onEnter","onExit","onOpened","onClosed","wrapClassName","modalClassName","backdropClassName","contentClassName","external","fade","zIndex","backdropTransition","modalTransition","innerRef","unmountOnClose","returnFocusAfterClose","container","targetPropType","trapFocus","propsToOmit","timeout","TransitionTimeouts","Modal","mountOnEnter","_this","call","_element","_originalBodyPadding","getFocusableChildren","bind","_assertThisInitialized","handleBackdropClick","handleBackdropMouseDown","handleEscape","handleStaticBackdropAnimation","handleTab","manageFocusAfterClose","clearBackdropAnimationTimeout","showStaticBackdropAnimation","componentDidMount","_this$props","init","setFocus","addEventListener","_isMounted","componentDidUpdate","prevProps","style","destroy","removeEventListener","ev","_dialog","parentNode","modalIndex","openCount","preventDefault","stopPropagation","focus","isAppearing","onEntered","onExited","querySelectorAll","focusableElements","join","getFocusedChild","currentFocus","focusableChildren","activeElement","err","e","_mouseDownElement","which","totalFocusable","focusedIndex","shiftKey","keyCode","keyCodes","esc","_this2","_backdropAnimationTimeout","setTimeout","_triggeringElement","setAttribute","position","_mountContainer","getTarget","getOriginalBodyPadding","conditionallyUpdateScrollbar","modalOpenClassName","modalOpenClassNameRegex","RegExp","replace","trim","Math","max","setScrollbarWidth","renderModalDialog","_classNames","_this3","omit","dialogBaseClass","ref","c","isModalHidden","display","_this$props2","modalAttributes","onMouseDown","onKeyUp","onKeyDown","tabIndex","hasTransition","baseClass","Backdrop","in","clearTimeout","undefined","ModalFooter"],"mappings":"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","file":"static/js/72.7c820640.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { MoreHorizontal, ChevronDown } from \"react-feather\";\r\nimport \"../../../assets/scss/pages/campaign.scss\";\r\nimport Select from \"react-select\";\r\nimport { modalFade } from \"../../../components/reactstrap/modal/ModalSourceCode\";\r\nconst showing = [\r\n  { value: \"all campaigns\", label: \"all campaign\" },\r\n  { value: \"active campaigns\", label: \"active campaigns\" },\r\n  { value: \"pauses campaigns\", label: \"pauses campaigns\" },\r\n  { value: \"campaigns drafts\", label: \"campaigns drafts\" },\r\n];\r\nconst sortedBy = [\r\n  { value: \"modified date\", label: \"modified date\" },\r\n  { value: \"created date\", label: \"created date\" },\r\n];\r\nclass Compaigns extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    modal: false,\r\n  };\r\n  toggleTab = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"mb-2\">\r\n          <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n            <span>1 of 1 campaigns</span>\r\n            <div className=\"d-flex mt-2\">\r\n              <div className=\"d-flex\">\r\n                <div className=\"pr-1\">Showing </div>\r\n                <div className=\"selectData\">\r\n                  <Select\r\n                    className=\"React customselect\"\r\n                    classNamePrefix=\"select\"\r\n                    defaultValue={showing[0]}\r\n                    name=\"color\"\r\n                    options={showing}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex\">\r\n                <div className=\"pl-1\">Sorted by </div>\r\n                <div className=\"selectData\">\r\n                  <Select\r\n                    className=\"React customselect pl-1\"\r\n                    classNamePrefix=\"select\"\r\n                    defaultValue={sortedBy[0]}\r\n                    name=\"color\"\r\n                    options={sortedBy}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col lg=\"4\" md=\"4\">\r\n            <div className=\"float-right\">\r\n              <Button.Ripple\r\n                color=\"primary\"\r\n                className=\"btn-block\"\r\n                onClick={this.toggleModal}\r\n              >\r\n                <Modal\r\n                  isOpen={this.state.modal}\r\n                  toggle={this.toggleModal}\r\n                  className=\"modal-dialog-centered\"\r\n                >\r\n                  <ModalHeader toggle={this.toggleModal} className=\"bg-primary\">\r\n                    Primary\r\n                  </ModalHeader>\r\n                  <ModalBody className=\"modal-dialog-centered\">\r\n                    Tart lemon drops macaroon oat cake chocolate toffee\r\n                    chocolate bar icing. Pudding jelly beans carrot cake pastry\r\n                    gummies cheesecake lollipop. I love cookie lollipop cake I\r\n                    love sweet gummi bears cupcake dessert.\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.toggleModal}>\r\n                      Accept\r\n                    </Button>{\" \"}\r\n                  </ModalFooter>\r\n                </Modal>\r\n                Create Campaign\r\n              </Button.Ripple>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n            <Card className=\"cardChange hi-1\">\r\n              <CardBody>\r\n                <Row>\r\n                  <Col lg=\"6\" sm=\"12\">\r\n                    <h5>Abc</h5>\r\n                  </Col>\r\n                  <Col lg=\"6\" sm=\"12\" className=\"text-right\">\r\n                    <UncontrolledButtonDropdown className=\"rt-t\">\r\n                      <DropdownToggle caret>\r\n                        <MoreHorizontal size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem tag=\"a\">edit</DropdownItem>\r\n                        <DropdownItem tag=\"a\">duplicate</DropdownItem>\r\n                        <DropdownItem tag=\"a\">pause</DropdownItem>\r\n                        <DropdownItem tag=\"a\">delete</DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledButtonDropdown>\r\n                  </Col>\r\n                </Row>\r\n                <span>Created 18 hours ago </span>\r\n                <div className=\"card-btns d-flex justify-content-between mt-2\">\r\n                  <Button.Ripple color=\"primary\" size=\"sm\">\r\n                    <ChevronDown size={15} />\r\n                    $0\r\n                  </Button.Ripple>\r\n                  <Button.Ripple\r\n                    className=\"round\"\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    outline\r\n                  >\r\n                    active\r\n                  </Button.Ripple>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Compaigns;\r\n","import React from \"react\"\n\nexport const modalBasic = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class ModalBasic extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggleModal}>\n            Basic Modal\n          </ModalHeader>\n          <ModalBody>\n            <h5>Check First Paragraph</h5>\n            Oat cake ice cream candy chocolate cake chocolate cake\n            cotton candy dragée apple pie. Brownie carrot cake candy\n            canes bonbon fruitcake topping halvah. Cake sweet roll cake\n            cheesecake cookie chocolate cake liquorice.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggleModal}>\n              Accept\n            </Button>{\" \"}\n          </ModalFooter>\n        </Modal>\n      )\n    }\n  }\n  export default ModalBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalCentered = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class ModalBasic extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          Vertically Centered\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n          Oat cake ice cream candy chocolate cake chocolate cake\n          cotton candy dragée apple pie. Brownie carrot cake candy\n          canes bonbon fruitcake topping halvah. Cake sweet roll cake\n          cheesecake cookie chocolate cake liquorice.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default ModalBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalBackdrop = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class modalBackdrop extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n        backdrop={false}\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          Vertically Centered\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n          Candy oat cake topping topping chocolate cake. Icing pudding\n          jelly beans I love chocolate carrot cake wafer candy canes.\n          Biscuit croissant fruitcake bonbon soufflé.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default modalBackdrop\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalFade = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class modalFade extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n        fade={false}\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          Vertically Centered\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n          Candy oat cake topping topping chocolate cake. Icing pudding\n          jelly beans I love chocolate carrot cake wafer candy canes.\n          Biscuit croissant fruitcake bonbon soufflé.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default modalFade\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalTheme = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class modalTheme extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader toggle={this.toggleModal} className=\"bg-primary\">\n          Primary\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n        Tart lemon drops macaroon oat cake chocolate toffee chocolate bar icing.\n        Pudding jelly beans carrot cake pastry gummies cheesecake lollipop.\n        I love cookie lollipop cake I love sweet gummi bears cupcake dessert.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default modalTheme\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalSizes = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class modalSizes extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"warning\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Large Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered modal-lg\"\n      >\n        <ModalHeader toggle={this.toggleModal} className=\"bg-primary\">\n        Large Modal\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n        Halvah powder wafer. Chupa chups pie topping carrot cake cake.\n        Tootsie roll sesame snaps jelly-o marshmallow marshmallow jelly jujubes candy.\n        Chupa chups cheesecake gingerbread chupa chups cake candy canes sweet roll.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default modalSizes\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalForm = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class ModalForm extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n      <Button color=\"success\" outline onClick={this.toggleModal}>\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          Login Form\n        </ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"email\">Email:</Label>\n            <Input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email Address\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"password\">Password:</Label>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n            />\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Login\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default ModalForm\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalDestructuring = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap'\n\nclass ModalExample extends React.Component {\n\n  state = {\n    modal: false,\n    unmountOnClose: true\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  changeUnmountOnClose = e => {\n    let value = e.target.value\n    this.setState({ unmountOnClose: JSON.parse(value) })\n  }\n\n    render() {\n        return (\n          <Form inline onSubmit={e => e.preventDefault()}>\n            <FormGroup>\n              <Label for=\"unmountOnClose\">UnmountOnClose value</Label>{\" \"}\n              <Input\n                type=\"select\"\n                name=\"unmountOnClose\"\n                id=\"unmountOnClose\"\n                onChange={this.changeUnmountOnClose}\n              >\n                <option value=\"true\">true</option>\n                <option value=\"false\">false</option>\n              </Input>\n            </FormGroup>{\" \"}\n            <Button color=\"success\" outline onClick={this.toggleModal}>\n              Launch modal\n            </Button>\n          </Form>\n          <Modal\n            isOpen={this.state.modal}\n            toggle={this.toggleModal}\n            className={this.props.className}\n            unmountOnClose={this.state.unmountOnClose}\n          >\n            <ModalHeader toggle={this.toggleModal}>\n              Modal title\n            </ModalHeader>\n            <ModalBody>\n              <Input\n                type=\"textarea\"\n                placeholder=\"Write something (data should remain in modal if unmountOnClose is set to false)\"\n                rows={5}\n              />\n            </ModalBody>\n            <ModalFooter>\n              <Button outline color=\"primary\" onClick={this.toggleModal}>\n                Accept\n              </Button>{\" \"}\n            </ModalFooter>\n          </Modal>\n        )\n    }\n}\n\nexport default ModalExample\n        `}\n    </code>\n  </pre>\n)\n\nexport const modalFocus = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap'\n\nclass ModalFocus extends React.Component {\n\n  state = {\n    modal: false,\n    focusAfterClose: true\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  handleSelectChange({ target: { value } }) {\n    this.setState({ focusAfterClose: JSON.parse(value) })\n  }\n\n    render() {\n        return (\n          <Form inline onSubmit={e => e.preventDefault()}>\n            <FormGroup>\n              <Label for=\"focusAfterClose\" className=\"mr-1\">\n                Focus After Close\n              </Label>{\" \"}\n              <Input\n                type=\"select\"\n                name=\"focusAfterClose\"\n                id=\"focusAfterClose\"\n                onChange={this.handleSelectChange}\n              >\n                <option value=\"true\">Yes</option>\n                <option value=\"fasle\">No</option>\n              </Input>\n            </FormGroup>{\" \"}\n          <Button\n            color=\"success\"\n            className=\"ml-1\"\n            outline\n            onClick={this.toggleModal}\n          >\n            Launch modal\n          </Button>\n        </Form>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n          className={this.props.className}\n          returnFocusAfterClose={this.state.focusAfterClose}\n        >\n          <ModalHeader toggle={this.toggleModal}>\n            Modal title\n          </ModalHeader>\n          <ModalBody>\n            <Input\n              type=\"textarea\"\n              placeholder=\"Write something (data should remain in modal if unmountOnClose is set to false)\"\n              rows={5}\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" outline onClick={this.toggleModal}>\n              Accept\n            </Button>{\" \"}\n          </ModalFooter>\n        </Modal>\n        )\n    }\n}\n\nexport default ModalFocus\n        `}\n    </code>\n  </pre>\n)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      charCode = props.charCode,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n    closeButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('close', cssModule),\n      \"aria-label\": closeAriaLabel\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, closeIcon));\n  }\n\n  return /*#__PURE__*/React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), /*#__PURE__*/React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalBody = function ModalBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalBody.propTypes = propTypes;\nModalBody.defaultProps = defaultProps;\nexport default ModalBody;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { canUseDOM } from './utils';\nvar propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};\n\nvar Portal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Portal, _React$Component);\n\n  function Portal() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Portal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.defaultNode) {\n      document.body.removeChild(this.defaultNode);\n    }\n\n    this.defaultNode = null;\n  };\n\n  _proto.render = function render() {\n    if (!canUseDOM) {\n      return null;\n    }\n\n    if (!this.props.node && !this.defaultNode) {\n      this.defaultNode = document.createElement('div');\n      document.body.appendChild(this.defaultNode);\n    }\n\n    return /*#__PURE__*/ReactDOM.createPortal(this.props.children, this.props.node || this.defaultNode);\n  };\n\n  return Portal;\n}(React.Component);\n\nPortal.propTypes = propTypes;\nexport default Portal;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from './Portal';\nimport Fade from './Fade';\nimport { getOriginalBodyPadding, conditionallyUpdateScrollbar, setScrollbarWidth, mapToCssModules, omit, focusableElements, TransitionTimeouts, keyCodes, targetPropType, getTarget } from './utils';\n\nfunction noop() {}\n\nvar FadePropTypes = PropTypes.shape(Fade.propTypes);\nvar propTypes = {\n  isOpen: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  centered: PropTypes.bool,\n  scrollable: PropTypes.bool,\n  size: PropTypes.string,\n  toggle: PropTypes.func,\n  keyboard: PropTypes.bool,\n  role: PropTypes.string,\n  labelledBy: PropTypes.string,\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n  onEnter: PropTypes.func,\n  onExit: PropTypes.func,\n  onOpened: PropTypes.func,\n  onClosed: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  wrapClassName: PropTypes.string,\n  modalClassName: PropTypes.string,\n  backdropClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  external: PropTypes.node,\n  fade: PropTypes.bool,\n  cssModule: PropTypes.object,\n  zIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  backdropTransition: FadePropTypes,\n  modalTransition: FadePropTypes,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  unmountOnClose: PropTypes.bool,\n  returnFocusAfterClose: PropTypes.bool,\n  container: targetPropType,\n  trapFocus: PropTypes.bool\n};\nvar propsToOmit = Object.keys(propTypes);\nvar defaultProps = {\n  isOpen: false,\n  autoFocus: true,\n  centered: false,\n  scrollable: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop,\n  onClosed: noop,\n  modalTransition: {\n    timeout: TransitionTimeouts.Modal\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade // uses standard fade transition\n\n  },\n  unmountOnClose: true,\n  returnFocusAfterClose: true,\n  container: 'body',\n  trapFocus: false\n};\n\nvar Modal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Modal, _React$Component);\n\n  function Modal(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this._element = null;\n    _this._originalBodyPadding = null;\n    _this.getFocusableChildren = _this.getFocusableChildren.bind(_assertThisInitialized(_this));\n    _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_this));\n    _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_this));\n    _this.handleEscape = _this.handleEscape.bind(_assertThisInitialized(_this));\n    _this.handleStaticBackdropAnimation = _this.handleStaticBackdropAnimation.bind(_assertThisInitialized(_this));\n    _this.handleTab = _this.handleTab.bind(_assertThisInitialized(_this));\n    _this.onOpened = _this.onOpened.bind(_assertThisInitialized(_this));\n    _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));\n    _this.manageFocusAfterClose = _this.manageFocusAfterClose.bind(_assertThisInitialized(_this));\n    _this.clearBackdropAnimationTimeout = _this.clearBackdropAnimationTimeout.bind(_assertThisInitialized(_this));\n    _this.trapFocus = _this.trapFocus.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: false,\n      showStaticBackdropAnimation: false\n    };\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props = this.props,\n        isOpen = _this$props.isOpen,\n        autoFocus = _this$props.autoFocus,\n        onEnter = _this$props.onEnter;\n\n    if (isOpen) {\n      this.init();\n      this.setState({\n        isOpen: true\n      });\n\n      if (autoFocus) {\n        this.setFocus();\n      }\n    }\n\n    if (onEnter) {\n      onEnter();\n    } // traps focus inside the Modal, even if the browser address bar is focused\n\n\n    document.addEventListener('focus', this.trapFocus, true);\n    this._isMounted = true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.init();\n      this.setState({\n        isOpen: true\n      }); // let render() renders Modal Dialog first\n\n      return;\n    } // now Modal Dialog is rendered and we can refer this._element and this._dialog\n\n\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearBackdropAnimationTimeout();\n\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this._element) {\n      this.destroy();\n\n      if (this.props.isOpen || this.state.isOpen) {\n        this.close();\n      }\n    }\n\n    document.removeEventListener('focus', this.trapFocus, true);\n    this._isMounted = false;\n  };\n\n  _proto.trapFocus = function trapFocus(ev) {\n    if (!this.props.trapFocus) {\n      return;\n    }\n\n    if (!this._element) //element is not attached\n      return;\n    if (this._dialog && this._dialog.parentNode === ev.target) // initial focus when the Modal is opened\n      return;\n    if (this.modalIndex < Modal.openCount - 1) // last opened modal\n      return;\n    var children = this.getFocusableChildren();\n\n    for (var i = 0; i < children.length; i++) {\n      // focus is already inside the Modal\n      if (children[i] === ev.target) return;\n    }\n\n    if (children.length > 0) {\n      // otherwise focus the first focusable element in the Modal\n      ev.preventDefault();\n      ev.stopPropagation();\n      children[0].focus();\n    }\n  };\n\n  _proto.onOpened = function onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.modalTransition.onEntered || noop)(node, isAppearing);\n  };\n\n  _proto.onClosed = function onClosed(node) {\n    var unmountOnClose = this.props.unmountOnClose; // so all methods get called before it is unmounted\n\n    this.props.onClosed();\n    (this.props.modalTransition.onExited || noop)(node);\n\n    if (unmountOnClose) {\n      this.destroy();\n    }\n\n    this.close();\n\n    if (this._isMounted) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  _proto.setFocus = function setFocus() {\n    if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') {\n      this._dialog.parentNode.focus();\n    }\n  };\n\n  _proto.getFocusableChildren = function getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  };\n\n  _proto.getFocusedChild = function getFocusedChild() {\n    var currentFocus;\n    var focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n\n    return currentFocus;\n  } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  ;\n\n  _proto.handleBackdropClick = function handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n      var backdrop = this._dialog ? this._dialog.parentNode : null;\n\n      if (backdrop && e.target === backdrop && this.props.backdrop === 'static') {\n        this.handleStaticBackdropAnimation();\n      }\n\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  };\n\n  _proto.handleTab = function handleTab(e) {\n    if (e.which !== 9) return;\n    if (this.modalIndex < Modal.openCount - 1) return; // last opened modal\n\n    var focusableChildren = this.getFocusableChildren();\n    var totalFocusable = focusableChildren.length;\n    if (totalFocusable === 0) return;\n    var currentFocus = this.getFocusedChild();\n    var focusedIndex = 0;\n\n    for (var i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  };\n\n  _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  };\n\n  _proto.handleEscape = function handleEscape(e) {\n    if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n      if (this.props.keyboard) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.toggle(e);\n      } else if (this.props.backdrop === 'static') {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleStaticBackdropAnimation();\n      }\n    }\n  };\n\n  _proto.handleStaticBackdropAnimation = function handleStaticBackdropAnimation() {\n    var _this2 = this;\n\n    this.clearBackdropAnimationTimeout();\n    this.setState({\n      showStaticBackdropAnimation: true\n    });\n    this._backdropAnimationTimeout = setTimeout(function () {\n      _this2.setState({\n        showStaticBackdropAnimation: false\n      });\n    }, 100);\n  };\n\n  _proto.init = function init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    if (!this._element) {\n      this._element = document.createElement('div');\n\n      this._element.setAttribute('tabindex', '-1');\n\n      this._element.style.position = 'relative';\n      this._element.style.zIndex = this.props.zIndex;\n      this._mountContainer = getTarget(this.props.container);\n\n      this._mountContainer.appendChild(this._element);\n    }\n\n    this._originalBodyPadding = getOriginalBodyPadding();\n    conditionallyUpdateScrollbar();\n\n    if (Modal.openCount === 0) {\n      document.body.className = classNames(document.body.className, mapToCssModules('modal-open', this.props.cssModule));\n    }\n\n    this.modalIndex = Modal.openCount;\n    Modal.openCount += 1;\n  };\n\n  _proto.destroy = function destroy() {\n    if (this._element) {\n      this._mountContainer.removeChild(this._element);\n\n      this._element = null;\n    }\n\n    this.manageFocusAfterClose();\n  };\n\n  _proto.manageFocusAfterClose = function manageFocusAfterClose() {\n    if (this._triggeringElement) {\n      var returnFocusAfterClose = this.props.returnFocusAfterClose;\n      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n  };\n\n  _proto.close = function close() {\n    if (Modal.openCount <= 1) {\n      var modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule); // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`\n\n      var modalOpenClassNameRegex = new RegExp(\"(^| )\" + modalOpenClassName + \"( |$)\");\n      document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();\n    }\n\n    this.manageFocusAfterClose();\n    Modal.openCount = Math.max(0, Modal.openCount - 1);\n    setScrollbarWidth(this._originalBodyPadding);\n  };\n\n  _proto.renderModalDialog = function renderModalDialog() {\n    var _classNames,\n        _this3 = this;\n\n    var attributes = omit(this.props, propsToOmit);\n    var dialogBaseClass = 'modal-dialog';\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, attributes, {\n      className: mapToCssModules(classNames(dialogBaseClass, this.props.className, (_classNames = {}, _classNames[\"modal-\" + this.props.size] = this.props.size, _classNames[dialogBaseClass + \"-centered\"] = this.props.centered, _classNames[dialogBaseClass + \"-scrollable\"] = this.props.scrollable, _classNames)), this.props.cssModule),\n      role: \"document\",\n      ref: function ref(c) {\n        _this3._dialog = c;\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: mapToCssModules(classNames('modal-content', this.props.contentClassName), this.props.cssModule)\n    }, this.props.children));\n  };\n\n  _proto.render = function render() {\n    var unmountOnClose = this.props.unmountOnClose;\n\n    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n      var isModalHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n      this._element.style.display = isModalHidden ? 'none' : 'block';\n      var _this$props2 = this.props,\n          wrapClassName = _this$props2.wrapClassName,\n          modalClassName = _this$props2.modalClassName,\n          backdropClassName = _this$props2.backdropClassName,\n          cssModule = _this$props2.cssModule,\n          isOpen = _this$props2.isOpen,\n          backdrop = _this$props2.backdrop,\n          role = _this$props2.role,\n          labelledBy = _this$props2.labelledBy,\n          external = _this$props2.external,\n          innerRef = _this$props2.innerRef;\n      var modalAttributes = {\n        onClick: this.handleBackdropClick,\n        onMouseDown: this.handleBackdropMouseDown,\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        style: {\n          display: 'block'\n        },\n        'aria-labelledby': labelledBy,\n        role: role,\n        tabIndex: '-1'\n      };\n      var hasTransition = this.props.fade;\n\n      var modalTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), this.props.modalTransition), {}, {\n        baseClass: hasTransition ? this.props.modalTransition.baseClass : '',\n        timeout: hasTransition ? this.props.modalTransition.timeout : 0\n      });\n\n      var backdropTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), this.props.backdropTransition), {}, {\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0\n      });\n\n      var Backdrop = backdrop && (hasTransition ? /*#__PURE__*/React.createElement(Fade, _extends({}, backdropTransition, {\n        in: isOpen && !!backdrop,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames('modal-backdrop', backdropClassName), cssModule)\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: mapToCssModules(classNames('modal-backdrop', 'show', backdropClassName), cssModule)\n      }));\n      return /*#__PURE__*/React.createElement(Portal, {\n        node: this._element\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: mapToCssModules(wrapClassName)\n      }, /*#__PURE__*/React.createElement(Fade, _extends({}, modalAttributes, modalTransition, {\n        in: isOpen,\n        onEntered: this.onOpened,\n        onExited: this.onClosed,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames('modal', modalClassName, this.state.showStaticBackdropAnimation && 'modal-static'), cssModule),\n        innerRef: innerRef\n      }), external, this.renderModalDialog()), Backdrop));\n    }\n\n    return null;\n  };\n\n  _proto.clearBackdropAnimationTimeout = function clearBackdropAnimationTimeout() {\n    if (this._backdropAnimationTimeout) {\n      clearTimeout(this._backdropAnimationTimeout);\n      this._backdropAnimationTimeout = undefined;\n    }\n  };\n\n  return Modal;\n}(React.Component);\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nModal.openCount = 0;\nexport default Modal;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;"],"sourceRoot":""}