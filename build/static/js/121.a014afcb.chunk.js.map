{"version":3,"sources":["views/apps/todo/Todo.js"],"names":["mql","window","matchMedia","TODO","state","addTask","sidebarDocked","matches","sidebarOpen","taskToUpdate","prevState","onSetSidebarOpen","open","setState","mediaQueryChanged","handleAddTask","status","handleUpdateTask","todo","undefined","handleUndoChanges","arr","addListener","this","removeListener","className","onClick","Consumer","context","sidebar","routerProps","props","mainSidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","addTaskState","newTask","React","Component"],"mappings":"gQAOMA,G,QAAMC,OAAOC,WAAP,uBAENC,E,4MACJC,MAAQ,CACNC,SAAS,EACTC,cAAeN,EAAIO,QACnBC,aAAa,EACbC,aAAc,KACdC,UAAW,M,EAUbC,iBAAmB,SAAAC,GACjB,EAAKC,SAAS,CAAEL,YAAaI,K,EAG/BE,kBAAoB,WAClB,EAAKD,SAAS,CAAEP,cAAeN,EAAIO,QAASC,aAAa,K,EAG3DO,cAAgB,SAAAC,GACH,SAAXA,EACI,EAAKH,SAAS,CAAER,SAAS,IACzB,EAAKQ,SAAS,CAAER,SAAS,EAAOI,aAAc,Q,EAEpDQ,iBAAmB,SAAAC,QACJC,IAATD,EACF,EAAKL,SAAS,CAAER,SAAS,EAAMI,aAAcS,IAE7C,EAAKL,SAAS,CAAEJ,aAAc,Q,EAIlCW,kBAAoB,SAAAC,GAClB,EAAKR,SAAS,CACZH,UAAWW,K,+DA/Bf,WACErB,EAAIsB,YAAYC,KAAKT,qB,kCAGvB,WACEd,EAAIwB,eAAeD,KAAKT,qB,oBA8B1B,WAAU,IAAD,OACP,OACE,yBAAKW,UAAU,sCACb,yBACEA,UAAS,8BACPF,KAAKnB,MAAMC,SAAWkB,KAAKnB,MAAMI,YAAc,OAAS,IAE1DkB,QAAS,WACP,EAAKX,cAAc,SACnB,EAAKJ,kBAAiB,MAG1B,kBAAC,IAAcgB,SAAf,MACG,SAAAC,GAAO,OACN,kBAAC,IAAD,CACEC,QACE,kBAAC,IAAD,CACEC,YAAa,EAAKC,MAClB1B,QAAS,EAAKU,cACdiB,YAAa,EAAKrB,mBAGtBsB,OAAQ,EAAK7B,MAAME,cACnBM,KAAM,EAAKR,MAAMI,YACjB0B,iBAAiB,sCACjBC,OAAO,EACPC,iBAAiB,0BACjBC,UAAuC,QAA5BT,EAAQxB,MAAMkC,WAb3B,SAkBJ,kBAAC,IAAD,CACER,YAAaP,KAAKQ,MAClBd,iBAAkBM,KAAKN,iBACvBe,YAAaT,KAAKZ,iBAClBD,UAAWa,KAAKnB,MAAMM,YAExB,kBAAC,IAAD,CACEL,QAASkB,KAAKR,cACdwB,aAAchB,KAAKnB,MAAMC,QACzBI,aAAcc,KAAKnB,MAAMK,aACzB+B,QAASjB,KAAKnB,MAAMoC,QACpBR,YAAaT,KAAKZ,iBAClBS,kBAAmBG,KAAKH,yB,GAvFfqB,IAAMC,WA8FVvC","file":"static/js/121.a014afcb.chunk.js","sourcesContent":["import React from \"react\"\nimport Sidebar from \"react-sidebar\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport TodoSidebar from \"./TodoSidebar\"\nimport TodoList from \"./TodoList\"\nimport TaskSidebar from \"./TaskSidebar\"\nimport \"../../../assets/scss/pages/app-todo.scss\"\nconst mql = window.matchMedia(`(min-width: 992px)`)\n\nclass TODO extends React.Component {\n  state = {\n    addTask: false,\n    sidebarDocked: mql.matches,\n    sidebarOpen: false,\n    taskToUpdate: null,\n    prevState: null\n  }\n  UNSAFE_componentWillMount() {\n    mql.addListener(this.mediaQueryChanged)\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged)\n  }\n\n  onSetSidebarOpen = open => {\n    this.setState({ sidebarOpen: open })\n  }\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\n  }\n\n  handleAddTask = status => {\n    status === \"open\"\n      ? this.setState({ addTask: true })\n      : this.setState({ addTask: false, taskToUpdate: null })\n  }\n  handleUpdateTask = todo => {\n    if (todo !== undefined) {\n      this.setState({ addTask: true, taskToUpdate: todo })\n    } else {\n      this.setState({ taskToUpdate: null })\n    }\n  }\n\n  handleUndoChanges = arr => {\n    this.setState({\n      prevState: arr\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"todo-application position-relative\">\n        <div\n          className={`app-content-overlay ${\n            this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"\n          }`}\n          onClick={() => {\n            this.handleAddTask(\"close\")\n            this.onSetSidebarOpen(false)\n          }}\n        />\n        <ContextLayout.Consumer>\n          {context => (\n            <Sidebar\n              sidebar={\n                <TodoSidebar\n                  routerProps={this.props}\n                  addTask={this.handleAddTask}\n                  mainSidebar={this.onSetSidebarOpen}\n                />\n              }\n              docked={this.state.sidebarDocked}\n              open={this.state.sidebarOpen}\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\n              touch={false}\n              contentClassName=\"sidebar-children d-none\"\n              pullRight={context.state.direction === \"rtl\"}>\n              \"\"\n            </Sidebar>\n          )}\n        </ContextLayout.Consumer>\n        <TodoList\n          routerProps={this.props}\n          handleUpdateTask={this.handleUpdateTask}\n          mainSidebar={this.onSetSidebarOpen}\n          prevState={this.state.prevState}\n        />\n        <TaskSidebar\n          addTask={this.handleAddTask}\n          addTaskState={this.state.addTask}\n          taskToUpdate={this.state.taskToUpdate}\n          newTask={this.state.newTask}\n          mainSidebar={this.onSetSidebarOpen}\n          handleUndoChanges={this.handleUndoChanges}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TODO\n"],"sourceRoot":""}