{"version":3,"sources":["views/ui-elements/apps/SocialProof.js"],"names":["mql","window","matchMedia","SocialProof","state","addTask","sidebarDocked","matches","sidebarOpen","taskToUpdate","prevState","onSetSidebarOpen","open","setState","mediaQueryChanged","handleAddTask","status","handleUpdateTask","todo","undefined","handleUndoChanges","arr","addListener","this","removeListener","className","onClick","Consumer","context","sidebar","routerProps","props","mainSidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","addTaskState","newTask","React","Component"],"mappings":"gQAOMA,G,QAAMC,OAAOC,WAAP,uBAENC,E,4MACJC,MAAQ,CACNC,SAAS,EACTC,cAAeN,EAAIO,QACnBC,aAAa,EACbC,aAAc,KACdC,UAAW,M,EAUbC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEL,YAAaI,K,EAG/BE,kBAAoB,WAClB,EAAKD,SAAS,CAAEP,cAAeN,EAAIO,QAASC,aAAa,K,EAG3DO,cAAgB,SAACC,GACJ,SAAXA,EACI,EAAKH,SAAS,CAAER,SAAS,IACzB,EAAKQ,SAAS,CAAER,SAAS,EAAOI,aAAc,Q,EAEpDQ,iBAAmB,SAACC,QACLC,IAATD,EACF,EAAKL,SAAS,CAAER,SAAS,EAAMI,aAAcS,IAE7C,EAAKL,SAAS,CAAEJ,aAAc,Q,EAIlCW,kBAAoB,SAACC,GACnB,EAAKR,SAAS,CACZH,UAAWW,K,+DA/Bf,WACErB,EAAIsB,YAAYC,KAAKT,qB,kCAGvB,WACEd,EAAIwB,eAAeD,KAAKT,qB,oBA8B1B,WAAU,IAAD,OACP,OACE,yBAAKW,UAAU,sCACb,yBACEA,UAAS,8BACPF,KAAKnB,MAAMC,SAAWkB,KAAKnB,MAAMI,YAAc,OAAS,IAE1DkB,QAAS,WACP,EAAKX,cAAc,SACnB,EAAKJ,kBAAiB,MAG1B,kBAAC,IAAcgB,SAAf,MACG,SAACC,GAAD,OACC,kBAAC,IAAD,CACEC,QACE,kBAAC,IAAD,CACEC,YAAa,EAAKC,MAClB1B,QAAS,EAAKU,cACdiB,YAAa,EAAKrB,mBAGtBsB,OAAQ,EAAK7B,MAAME,cACnBM,KAAM,EAAKR,MAAMI,YACjB0B,iBAAiB,sCACjBC,OAAO,EACPC,iBAAiB,0BACjBC,UAAuC,QAA5BT,EAAQxB,MAAMkC,WAb3B,SAmBJ,kBAAC,IAAD,CACER,YAAaP,KAAKQ,MAClBd,iBAAkBM,KAAKN,iBACvBe,YAAaT,KAAKZ,iBAClBD,UAAWa,KAAKnB,MAAMM,YAExB,kBAAC,IAAD,CACEL,QAASkB,KAAKR,cACdwB,aAAchB,KAAKnB,MAAMC,QACzBI,aAAcc,KAAKnB,MAAMK,aACzB+B,QAASjB,KAAKnB,MAAMoC,QACpBR,YAAaT,KAAKZ,iBAClBS,kBAAmBG,KAAKH,yB,GAxFRqB,IAAMC,WA+FjBvC","file":"static/js/125.4f580fd5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport TodoSidebar from \"../../apps/todo/TodoSidebar\";\r\nimport TodoList from \"../../apps/todo/TodoList\";\r\nimport TaskSidebar from \"../../apps/todo/TaskSidebar\";\r\nimport \"../../../assets/scss/pages/app-todo.scss\";\r\nconst mql = window.matchMedia(`(min-width: 992px)`);\r\n\r\nclass SocialProof extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null,\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged);\r\n  }\r\n\r\n  onSetSidebarOpen = (open) => {\r\n    this.setState({ sidebarOpen: open });\r\n  };\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false });\r\n  };\r\n\r\n  handleAddTask = (status) => {\r\n    status === \"open\"\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null });\r\n  };\r\n  handleUpdateTask = (todo) => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo });\r\n    } else {\r\n      this.setState({ taskToUpdate: null });\r\n    }\r\n  };\r\n\r\n  handleUndoChanges = (arr) => {\r\n    this.setState({\r\n      prevState: arr,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-application position-relative\">\r\n        <div\r\n          className={`app-content-overlay ${\r\n            this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"\r\n          }`}\r\n          onClick={() => {\r\n            this.handleAddTask(\"close\");\r\n            this.onSetSidebarOpen(false);\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {(context) => (\r\n            <Sidebar\r\n              sidebar={\r\n                <TodoSidebar\r\n                  routerProps={this.props}\r\n                  addTask={this.handleAddTask}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n              touch={false}\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === \"rtl\"}\r\n            >\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <TodoList\r\n          routerProps={this.props}\r\n          handleUpdateTask={this.handleUpdateTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          prevState={this.state.prevState}\r\n        />\r\n        <TaskSidebar\r\n          addTask={this.handleAddTask}\r\n          addTaskState={this.state.addTask}\r\n          taskToUpdate={this.state.taskToUpdate}\r\n          newTask={this.state.newTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          handleUndoChanges={this.handleUndoChanges}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialProof;\r\n"],"sourceRoot":""}