{"version":3,"sources":["redux/actions/todo/index.js","views/apps/todo/TodoSidebar.js","views/apps/todo/TodoList.js","views/apps/todo/TaskSidebar.js","components/@vuexy/checkbox/CheckboxesVuexy.js","views/apps/todo/TableData.js"],"names":["getTodos","routeParams","dispatch","a","axios","get","params","then","result","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","trashTask","getState","todoApp","routeParam","post","response","updateTask","title","desc","updateLabel","label","addNewTask","task","searchTask","val","changeFilter","filter","history","push","TodoSidebar","state","modal","toggleModal","setState","prevState","handleSubmit","e","preventDefault","campaignName","length","isValid","Fragment","this","props","routerProps","location","className","onClick","mainSidebar","size","options","wheelPropagation","color","isOpen","toggle","onSubmit","required","placeholder","onChange","target","name","valid","invalid","alt","active","pathname","React","Component","connect","TodoList","handleUpdateTask","currentLocation","activeTab","handleOnChange","toggleTab","tab","match","app","todosArr","filteredTodos","map","i","centered","noHeader","pagination","selectableRows","columns","positionData","paginationPerPage","sortIcon","data1","TaskSidebar","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","tags","handleNewTaskTags","tag","tagsArr","includes","splice","indexOf","renderTags","taskArr","key","prevProps","addTaskState","addTask","icon","checked","right","stopPropagation","rows","Ripple","disabled","outline","CheckBoxesVuexy","defaultChecked","sortable","selector","row","rolename","Status","center","POSITION","PHONE","ONBOARD","RATING","NOTE","TAG","cell","end","href"],"mappings":"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","file":"static/js/18.0bb2883a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { history } from \"../../../history\";\n\nexport const getTodos = (routeParams) => {\n  return async (dispatch) => {\n    await axios\n      .get(\"api/apps/todo\", {\n        params: routeParams,\n      })\n      .then((result) => {\n        dispatch({\n          type: \"GET_TODOS\",\n          todos: result.data,\n          routeParams,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n};\nexport const completeTask = (todo) => {\n  return (dispatch) => {\n    dispatch({ type: \"COMPLETE_TASK\", id: todo.id, value: todo.isCompleted });\n  };\n};\n\nexport const starTask = (todo) => {\n  return (dispatch) => {\n    Promise.all([\n      dispatch({ type: \"STAR_TASK\", id: todo.id, value: todo.isStarred }),\n    ]);\n  };\n};\n\nexport const importantTask = (todo) => {\n  return (dispatch) => {\n    Promise.all([\n      dispatch({\n        type: \"IMPORTANT_TASK\",\n        id: todo.id,\n        value: todo.isImportant,\n      }),\n    ]);\n  };\n};\n\nexport const trashTask = (id) => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam;\n    axios\n      .post(\"/api/app/todo/trash-todo\", id)\n      .then((response) => dispatch({ type: \"TRASH_TASK\", id }))\n      .then(dispatch(getTodos(params)));\n  };\n};\n\nexport const updateTodo = (todo) => {\n  const request = axios.post(\"/api/apps/todo/update-todo\", todo);\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam;\n    request.then((response) => {\n      Promise.all([\n        dispatch({\n          type: \"UPDATE_TODO\",\n          todos: response.data,\n        }),\n      ]).then(() => dispatch(getTodos(params)));\n    });\n  };\n};\n\nexport const updateTask = (id, title, desc) => {\n  return (dispatch) => {\n    dispatch({ type: \"UPDATE_TASK\", id, title, desc });\n  };\n};\n\nexport const updateLabel = (id, label) => {\n  return (dispatch, getState) => {\n    dispatch({ type: \"UPDATE_LABEL\", label, id });\n  };\n};\n\nexport const addNewTask = (task) => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam;\n    axios.post(\"/api/apps/todo/new-task\", { task }).then((response) => {\n      dispatch({ type: \"ADD_TASK\", task });\n      dispatch(getTodos(params));\n    });\n  };\n};\n\nexport const searchTask = (val) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"SEARCH_TASK\",\n      val,\n    });\n  };\n};\n\nexport const changeFilter = (filter) => {\n  return (dispatch) => {\n    dispatch({ type: \"CHANGE_FILTER\", filter });\n    history.push(`/todo/${filter}`);\n    dispatch(getTodos({ filter }));\n  };\n};\n","import React from \"react\";\nimport {\n  Button,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Modal,\n  Form,\n  ModalHeader,\n  ModalBody,\n  InputGroup,\n  Input,\n  ModalFooter,\n} from \"reactstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { X, Layers, Star, Info, Check, Trash, User } from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../../redux/actions/todo/index\";\nimport { history } from \"../../../history\";\nclass TodoSidebar extends React.Component {\n  state = {\n    modal: false,\n  };\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.campaignName.length > 0) {\n      history.push(\"/apps/editcampaigns\");\n      this.setState({ isValid: true });\n    } else if (this.state.campaignName.length === 0) {\n      this.setState({ isValid: false });\n    }\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {console.log(\"getting props\", this.props.routerProps.location)}\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"todo-app-menu\">\n          {/* <div className=\"add-task\">\n            <Button.Ripple\n              block\n              className=\"btn-block my-1\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.addTask(\"open\");\n                this.props.mainSidebar(false);\n              }}\n            >\n              Add Task\n            </Button.Ripple>\n          </div> */}\n          <PerfectScrollbar\n            className=\"sidebar-menu-list\"\n            options={{\n              wheelPropagation: false,\n            }}\n          >\n            {/* <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0 pt-0\"\n                action\n                onClick={() => {\n                  this.props.changeFilter(\"all\");\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/all\"\n                    ? true\n                    : false\n                }\n              >\n                <Layers size={22} />\n                <span className=\"align-middle ml-1\">All</span>\n              </ListGroupItem>\n            </ListGroup> */}\n            <hr />\n            {/* <h5 className=\"mt-2 mb-1 pt-25 \">Tabs</h5> */}\n            {/* <Button>Create Campaign</Button> */}\n            {/* <Row className=\"my-1 mx-1\"> */}\n            {/* <Col lg=\"4\" md=\"4\" sm=\"12\"></Col>\n                  <Col lg=\"4\" md=\"4\" sm=\"12\"></Col> */}\n            {/* <Col lg=\"12\" md=\"12\" sm=\"12\"> */}\n            <div className=\"mt-2 mb-1 pt-25\">\n              <Button\n                color=\"primary\"\n                className=\"px-1\"\n                onClick={this.toggleModal}\n              >\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className=\"modal-dialog-centered\"\n                >\n                  <Form onSubmit={this.handleSubmit}>\n                    <ModalHeader toggle={this.toggleModal}>\n                      Build & launch a new campaign\n                    </ModalHeader>\n                    <ModalBody>\n                      <InputGroup>\n                        <Input\n                          type=\"text\"\n                          required\n                          placeholder=\"Campaign Name\"\n                          onChange={(e) =>\n                            this.setState({\n                              campaignName: e.target.value,\n                            })\n                          }\n                          value={this.state.campaignName}\n                          id=\"campaignName\"\n                          name=\"campaignName\"\n                          valid={this.state.isValid === true}\n                          invalid={this.state.isValid === false}\n                          alt=\"text\"\n                          //  placeholder=\"create position...\"\n                        />\n                      </InputGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                      <Button\n                        className=\"btn-sm\"\n                        color=\"primary\"\n                        onClick={this.handleSubmit}\n                      >\n                        Next\n                      </Button>\n                      <Button\n                        className=\"btn-secondary btn-sm\"\n                        onClick={this.toggleModal}\n                      >\n                        Cancel\n                      </Button>\n                    </ModalFooter>\n                  </Form>\n                </Modal>\n                Create Campaign\n              </Button>\n            </div>\n            {/* </Col> */}\n            {/* </Row> */}\n\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"starred\");\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/starred\"\n                    ? true\n                    : false\n                }\n              >\n                {/* <Star size={22} /> */}\n                <span className=\"align-middle ml-1\">Campaigns</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"completed\");\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/completed\"\n                    ? true\n                    : false\n                }\n              >\n                {/* <Check size={22} /> */}\n                <span className=\"align-middle ml-1\">Statistics</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"trashed\");\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/trashed\"\n                    ? true\n                    : false\n                }\n              >\n                {/* <User size={22} /> */}\n                <span className=\"align-middle ml-1\">Help Center</span>\n              </ListGroupItem>\n            </ListGroup>\n            <hr />\n          </PerfectScrollbar>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(null, { changeFilter })(TodoSidebar);\n","import React from \"react\";\nimport {\n  FormGroup,\n  Input,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  InputGroup,\n} from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport \"../../../assets/scss/pages/app-email.scss\";\nimport { Menu, Search, ChevronDown } from \"react-feather\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport { history } from \"../../../history\";\nimport { positionData, data1 } from \"./TableData\";\nimport {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask,\n} from \"../../../redux/actions/todo/index\";\nimport \"../../../assets/scss/pages/campaign.scss\";\n\nclass TodoList extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.app.todo.routeParam !== state.currentLocation) {\n      return {\n        todos: props.app.todo.todos,\n      };\n    }\n    // Return null if the state hasn't changed\n    return null;\n  }\n  state = {\n    todos: [],\n    handleUpdateTask: null,\n    currentLocation: this.props.routerProps.location.pathname,\n    value: \"\",\n    activeTab: \"1\",\n    modal: false,\n    campaignName: \"\",\n  };\n  async componentDidMount() {\n    await this.props.getTodos(this.props.routerProps.match.params);\n    this.setState({\n      todos: this.props.app.todo.todos,\n      handleUpdateTask: this.props.handleUpdateTask,\n    });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.campaignName.length > 0) {\n      history.push(\"/apps/editcampaigns\");\n      this.setState({ isValid: true });\n    } else if (this.state.campaignName.length === 0) {\n      this.setState({ isValid: false });\n    }\n  };\n\n  handleOnChange = (e) => {\n    this.setState({ value: e.target.value });\n    this.props.searchTask(e.target.value);\n  };\n\n  toggleTab = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  };\n\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  render() {\n    const { todos, handleUpdateTask, value } = this.state;\n    let routerFilter = this.props.routerProps.match.params.filter;\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos;\n    let renderTodos =\n      todosArr.length > 0 ? (\n        todosArr.map((todo, i) => {\n          return (\n            <Modal isOpen={this.state.modal} toggle={this.toggleModal} centered>\n              <ModalHeader toggle={this.toggleModal}>\n                Create Position\n              </ModalHeader>\n              <ModalBody>\n                <InputGroup>\n                  <Input\n                    type=\"text\"\n                    alt=\"text\"\n                    placeholder=\"create position...\"\n                  />\n                </InputGroup>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\">Create</Button>\n              </ModalFooter>\n            </Modal>\n            // <li\n            //   className={`todo-item ${todo.isCompleted ? \"completed\" : \"\"}`}\n            //   key={i}\n            //   onClick={() => {\n            //     handleUpdateTask(todo);\n            //   }}\n            // >\n            //   <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\n            //     <div className=\"todo-title-area d-flex align-items-center\">\n            //       <div className=\"title-wrapper d-flex\">\n            //         <Checkbox\n            //           color=\"primary\"\n            //           className=\"user-checkbox\"\n            //           icon={<Check className=\"vx-icon\" size={12} />}\n            //           label={\"\"}\n            //           checked={todo.isCompleted}\n            //           size=\"sm\"\n            //           onClick={(e) => {\n            //             e.stopPropagation();\n            //             this.props.completeTask(todo);\n            //           }}\n            //           onChange={(e) => e.stopPropagation()}\n            //         />\n            //         <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\n            //       </div>\n            //       {todo.tags.length > 0 ? (\n            //         <div className=\"chip-wrapper\">\n            //           {todo.tags.map((tag, i) => (\n            //             <div className=\"chip mb-0\" key={i}>\n            //               <div className=\"chip-body\">\n            //                 <span className=\"chip-text\">\n            //                   <span\n            //                     className={`bullet bullet-${\n            //                       tag === \"backend\"\n            //                         ? \"warning\"\n            //                         : tag === \"doc\"\n            //                         ? \"success\"\n            //                         : tag === \"bug\"\n            //                         ? \"danger\"\n            //                         : \"primary\"\n            //                     } bullet-xs`}\n            //                   />\n            //                   <span className=\"text-capitalize ml-25\">\n            //                     {tag}\n            //                   </span>\n            //                 </span>\n            //               </div>\n            //             </div>\n            //           ))}\n            //         </div>\n            //       ) : null}\n            //     </div>\n            //     <div\n            //       className={`todo-item-action d-flex ${\n            //         routerFilter === \"trashed\" ? \"justify-content-end\" : \"\"\n            //       }`}\n            //     >\n            //       <div\n            //         className={`todo-item-info d-inline-block ${\n            //           routerFilter === \"trashed\" ? \"mr-1\" : \"mr-1 mr-sm-0\"\n            //         }`}\n            //         onClick={(e) => {\n            //           e.stopPropagation();\n            //           this.props.importantTask(todo);\n            //         }}\n            //       >\n            //         <Info\n            //           size={17}\n            //           className={`${todo.isImportant ? \"text-success\" : \"\"}`}\n            //         />\n            //       </div>\n            //       <div\n            //         className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\n            //         onClick={(e) => {\n            //           e.stopPropagation();\n            //           this.props.starTask(todo);\n            //         }}\n            //       >\n            //         <Star\n            //           size={17}\n            //           className={`${todo.isStarred ? \"text-warning\" : \"\"}`}\n            //         />\n            //       </div>\n            //       {routerFilter !== \"trashed\" ? (\n            //         <div\n            //           className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\n            //           onClick={(e) => {\n            //             e.stopPropagation();\n            //             this.props.trashTask(todo.id);\n            //           }}\n            //         >\n            //           <Trash size={17} />\n            //         </div>\n            //       ) : null}\n            //     </div>\n            //   </div>\n            //   {todo.desc.length > 0 ? (\n            //     <p className=\"todo-desc truncate mb-0\">{todo.desc}</p>\n            //   ) : (\n            //     \"\"\n            //   )}\n            // </li>\n          );\n        })\n      ) : (\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\n          No tasks at this time\n        </p>\n      );\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"todo-app-area\">\n          <div className=\"todo-app-list-wrapper\">\n            <div className=\"todo-app-list\">\n              <div className=\"app-fixed-search\">\n                <div\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\n                  onClick={() => this.props.mainSidebar(true)}\n                >\n                  <Menu size={24} />\n                </div>\n                <FormGroup className=\"position-relative has-icon-left m-0 d-inline-block d-lg-block\">\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    onChange={(e) => this.handleOnChange(e)}\n                    value={value}\n                  />\n                  <div className=\"form-control-position\">\n                    <Search size={15} />\n                  </div>\n                </FormGroup>\n              </div>\n              <PerfectScrollbar\n                className=\"todo-task-list\"\n                options={{\n                  wheelPropagation: false,\n                }}\n              >\n                {/* <Row className=\"todo-task-list-wrapper mt-2\">{renderTodos}</Row> */}\n                {/* <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul> */}\n                <div className=\"react-dataTable\">\n                  <DataTable\n                    className=\"react-dataTable\"\n                    noHeader\n                    pagination\n                    selectableRows\n                    columns={positionData}\n                    paginationPerPage={7}\n                    sortIcon={<ChevronDown size={10} />}\n                    data={data1}\n                  />\n                </div>\n              </PerfectScrollbar>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    app: state.todoApp,\n  };\n};\nexport default connect(mapStateToProps, {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask,\n})(TodoList);\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n  FormGroup,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from \"reactstrap\"\nimport { X, Info, Star, Tag, Check } from \"react-feather\"\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport {\n  starTask,\n  completeTask,\n  importantTask,\n  updateTask,\n  updateLabel,\n  addNewTask\n} from \"../../../redux/actions/todo/index\"\nclass TaskSidebar extends React.Component {\n\n  // static getDerivedStateFromProps (props, state){\n  //   if (\n  //    ( props.taskToUpdate !== null &&\n  //     props.taskToUpdate.title !== state.taskTitle) ||\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\n  //   ) {\n  //     let todosArr = props.app.todo.todos\n  //     let receivedTask =\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\n  //     let taskToUpdate, taskTitle, taskDesc\n  //     filteredTask.map(task => {\n  //       return (\n  //         (taskToUpdate = task),\n  //         (taskTitle = task.title),\n  //         (taskDesc = task.desc)\n  //       )\n  //     })\n  //     return {\n  //       taskToUpdate,\n  //       taskTitle,\n  //       taskDesc\n  //     }\n  //   }\n  //   return null\n  // }\n\n  state = {\n    taskToUpdate: null,\n    taskTitle: \"\",\n    taskDesc: \"\",\n    taskStatus : false,\n    taskStarred : false,\n    taskImportant  : false,\n    newTask: {\n      title: \"\",\n      desc: \"\",\n      tags: [],\n      isCompleted: false,\n      isImportant: false,\n      isStarred: false\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(\n      (this.props.taskToUpdate !== null && this.state.taskToUpdate !== this.props.taskToUpdate) || \n      (this.props.taskToUpdate !== null && this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\n      (this.props.taskToUpdate !== null && this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\n      (this.props.taskToUpdate !== null && this.state.taskImportant !== this.props.taskToUpdate.isImportant) \n      ){\n      this.setState({ \n        taskToUpdate : this.props.taskToUpdate, \n        taskTitle :  this.props.taskToUpdate.title,\n        taskDesc :  this.props.taskToUpdate.desc,\n        taskStatus : this.props.taskToUpdate.isCompleted,\n        taskStarred : this.props.taskToUpdate.isStarred,\n        taskImportant : this.props.taskToUpdate.isImportant\n      })\n    }\n    else{\n      return \n    }\n  }\n  \n\n\n  handleNewTaskTags = tag => {\n    let tagsArr = this.state.newTask.tags\n    if (tagsArr.includes(tag)) {\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\n    } else {\n      tagsArr.push(tag)\n    }\n    this.setState({\n      ...this.state.newTask,\n      tags: tag\n    })\n  }\n\n  renderTags = taskArr => {\n    return taskArr.map((tag, i) => (\n      <div className=\"chip mb-0 mr-50\" key={i}>\n        <div className=\"chip-body\">\n          <span className=\"chip-text\">\n            <span\n              className={`bullet bullet-${\n                tag === \"backend\"\n                  ? \"warning\"\n                  : tag === \"doc\"\n                  ? \"success\"\n                  : tag === \"bug\"\n                  ? \"danger\"\n                  : \"primary\"\n              } bullet-xs`}\n            />\n            <span className=\"text-capitalize ml-25\">{tag}</span>\n          </span>\n        </div>\n      </div>\n    ))\n  }\n\n  render() {\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } = this.state\n\n    return (\n      <div\n        className={`task-sidebar ${\n          this.props.addTaskState === true ? \"show\" : \"\"\n        }`}\n      >\n        <div className=\"task-header\">\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"task-type-title text-bold-600\">\n              <h3>\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\n                  ? \"Update Task\"\n                  : \"Add Task\"}\n              </h3>\n            </div>\n            <div className=\"close-icon\">\n              <X\n                className=\"cursor-pointer\"\n                size={20}\n                onClick={() => this.props.addTask(\"close\")}\n              />\n            </div>\n          </div>\n        </div>\n        <PerfectScrollbar>\n          <div className=\"task-body\">\n            <div className=\"d-flex justify-content-between mb-2\">\n              <div className=\"mark-complete\">\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && <Checkbox\n                  color=\"primary\"\n                  className=\"user-checkbox\"\n                  icon={<Check className=\"vx-icon\" size={15} />}\n                  label={\"\"}\n                  checked={ taskStatus }                  \n                  onChange={e =>  {\n                    this.props.completeTask(this.props.taskToUpdate)\n                  }}\n                />}\n              </div>\n              <div className=\"task-actions\">\n                <Info\n                  size={20}\n                  className={`mr-50 ${\n                      (this.props.taskToUpdate !== null && this.state.taskImportant) ||\n                      newTask.isImportant \n                      ? \"text-success\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null){\n                      this.props.importantTask(this.props.taskToUpdate)\n                    }\n                    else{\n                      this.setState({\n                        newTask : {\n                          ...this.state.newTask,\n                          isImportant : !this.state.newTask.isImportant\n                        }\n                      })\n                    }\n                      \n                  }}\n                />\n                <Star\n                  size={20}\n                  className={`mr-50 ${\n                      (this.props.taskToUpdate !== null  && this.state.taskStarred) ||\n                      newTask.isStarred \n                      ? \"text-warning\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null){\n                      this.props.starTask(this.props.taskToUpdate)\n                    }\n                    else{\n                      this.setState({\n                        newTask : {\n                          ...this.state.newTask,\n                          isStarred : !this.state.newTask.isStarred\n                        }\n                      })\n                    }\n                    \n                  }}\n                />\n                <UncontrolledDropdown className=\"d-inline-block\">\n                  <DropdownToggle tag=\"span\">\n                    <Tag className=\"mr-50\" size={20} />\n                  </DropdownToggle>\n                  <DropdownMenu tag=\"ul\" right>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Frontend\"}\n                        checked={\n                            (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"frontend\") )||\n                            (newTask.tags.includes(\"frontend\"))\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onChange={e => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"frontend\")\n                          else this.handleNewTaskTags(\"frontend\")\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Backend\"}\n                        checked={\n                            (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"backend\"))||\n                            (newTask.tags.includes(\"backend\"))\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={e => e.stopPropagation()}\n                        onChange={e => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"backend\")\n                            else this.handleNewTaskTags(\"backend\")\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Doc\"}\n                        checked={\n                            (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"doc\"))||\n                            (newTask.tags.includes(\"doc\"))\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={e => e.stopPropagation()}\n                        onChange={e => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"doc\")\n                          else this.handleNewTaskTags(\"doc\")\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Bug\"}\n                        checked={\n                            (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"bug\"))||\n                            (newTask.tags.includes(\"bug\"))\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={e => e.stopPropagation()}\n                        onChange={e => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"bug\")\n                          else this.handleNewTaskTags(\"bug\")\n                        }}\n                      />\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </div>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\n                }\n                onChange={e => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.setState({\n                      taskTitle : e.target.value\n                    })\n                  }else{\n                    this.setState({ newTask : {\n                      ...this.state.newTask,\n                      title : e.target.value\n                    } })\n                  }\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"textarea\"\n                placeholder=\"Description\"\n                rows=\"5\"\n                value={\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\n                }\n                onChange={e => {\n                  if (this.props.taskToUpdate !== null){\n                    this.setState({\n                      taskDesc: e.target.value\n                    })\n                  }\n                  else{\n                    this.setState({ newTask : {\n                      ...this.state.newTask,\n                      desc : e.target.value\n                    } })\n                  }\n                }}\n              />\n            </FormGroup>\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\n              {this.props.taskToUpdate !== null &&\n              this.props.taskToUpdate.tags &&\n              this.props.taskToUpdate.tags.length > 0\n                ? this.renderTags(this.props.taskToUpdate.tags)\n                : null}\n            </div>\n\n            <hr className=\"my-2\" />\n            <div className=\"d-flex justify-content-end\">\n              <Button.Ripple\n                className=\"mr-50\"\n                color=\"primary\"\n                onClick={() => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.props.updateTask(taskToUpdate.id, taskTitle, taskDesc)\n                  } else {\n                    this.props.addNewTask(this.state.newTask)\n                  }\n                  this.props.addTask(\"close\")\n                  this.setState({\n                    newTask: {\n                      title: \"\",\n                      desc: \"\",\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false\n                    }\n                  })\n                }}\n                disabled={\n                  taskTitle.length > 0 || newTask.title.length > 0\n                    ? false\n                    : true\n                }\n              >\n                {taskToUpdate &&\n                taskToUpdate.id &&\n                this.props.taskToUpdate !== null\n                  ? \"Update\"\n                  : \"Add\"}\n              </Button.Ripple>\n              <Button.Ripple\n                color=\"light\"\n                outline\n                onClick={() => {\n                  this.props.addTask(\"close\")\n                  this.setState({\n                    newTask: {\n                      title: \"\",\n                      desc: \"\",\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false\n                    }\n                  })\n                }}\n              >\n                Cancel\n              </Button.Ripple>\n            </div> \n          </div>\n        </PerfectScrollbar>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    app: state.todoApp\n  }\n}\n\nexport default connect(mapStateToProps, {\n  completeTask,\n  importantTask,\n  starTask,\n  updateTask,\n  updateLabel,\n  addNewTask\n})(TaskSidebar)\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\";\r\nimport { Archive, FileText, MoreVertical, PenTool, Trash } from \"react-feather\";\r\nimport {\r\n  Button,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n\r\n// ** Table Zero Config Column\r\n\r\nexport const myFormData = [\r\n  {\r\n    name: \"Form Id\",\r\n    sortable: true,\r\n    selector: (row) => row.formId,\r\n  },\r\n  {\r\n    name: \"Created Date\",\r\n    sortable: true,\r\n    selector: (row) => row.createDate,\r\n    minWidth: \"150px\",\r\n  },\r\n  {\r\n    name: \"Document Name\",\r\n    sortable: true,\r\n    selector: (row) => row.docName,\r\n    minWidth: \"200px\",\r\n  },\r\n  {\r\n    name: \"Access\",\r\n    sortable: true,\r\n    selector: (row) => row.access,\r\n    minWidth: \"100px\",\r\n  },\r\n  {\r\n    name: \"View\",\r\n    sortable: true,\r\n    center: true,\r\n    minWidth: \"100px\",\r\n    cell: (row) => (\r\n      <>\r\n        <Button className=\"btn btn-sm text-primary\" outline>\r\n          View\r\n        </Button>\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    name: \"Action\",\r\n    sortable: true,\r\n    selector: (row) => row,\r\n    cell: () => {\r\n      return (\r\n        <div className=\"d-flex\">\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle className=\"pe-\" tag=\"span\">\r\n              <MoreVertical size={15} />\r\n            </DropdownToggle>\r\n            <DropdownMenu end>\r\n              <DropdownItem\r\n                tag=\"a\"\r\n                href=\"/\"\r\n                className=\"w-100\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <FileText size={15} />\r\n                <span className=\"align-middle ms-50\">Details</span>\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                tag=\"a\"\r\n                href=\"/\"\r\n                className=\"w-100\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <Archive size={15} />\r\n                <span className=\"align-middle ms-50\">Archive</span>\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                tag=\"a\"\r\n                href=\"/\"\r\n                className=\"w-100\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <Trash size={15} />\r\n                <span className=\"align-middle ms-50\">Delete</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport const positionData = [\r\n  {\r\n    name: \"CAMPAIGN NAME\",\r\n    sortable: true,\r\n    selector: (row) => row.rolename,\r\n  },\r\n  {\r\n    name: \"STATUS\",\r\n    sortable: true,\r\n    selector: (row) => row.Status,\r\n  },\r\n  {\r\n    name: \"POSITION\",\r\n    sortable: true,\r\n    center: true,\r\n    selector: (row) => row.POSITION,\r\n  },\r\n  {\r\n    name: \"PHONE\",\r\n    sortable: true,\r\n    center: true,\r\n    selector: (row) => row.PHONE,\r\n  },\r\n  {\r\n    name: \"ONBOARD\",\r\n    sortable: true,\r\n    center: true,\r\n    selector: (row) => row.ONBOARD,\r\n  },\r\n  {\r\n    name: \"RATING\",\r\n    sortable: true,\r\n    center: true,\r\n    selector: (row) => row.RATING,\r\n  },\r\n  {\r\n    name: \"NOTE\",\r\n    sortable: true,\r\n    center: true,\r\n    selector: (row) => row.NOTE,\r\n  },\r\n  {\r\n    name: \"TAG\",\r\n    sortable: true,\r\n    center: true,\r\n    selector: (row) => row.TAG,\r\n  },\r\n  {\r\n    name: \"ACTION\",\r\n    sortable: true,\r\n    selector: (row) => row,\r\n    cell: () => {\r\n      return (\r\n        <div className=\"d-flex\">\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle className=\"pe-\" tag=\"span\">\r\n              <MoreVertical size={15} />\r\n            </DropdownToggle>\r\n            <DropdownMenu end>\r\n              <DropdownItem\r\n                tag=\"a\"\r\n                href=\"/\"\r\n                className=\"w-100\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <PenTool size={15} />\r\n                Edit\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                tag=\"a\"\r\n                href=\"/\"\r\n                className=\"w-100\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <Trash size={15} />\r\n                <span className=\"align-middle ms-50\">Delete</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport const data1 = [\r\n  {\r\n    id: 1,\r\n    rolename: \"Sveltose\",\r\n    Status: \"Active\",\r\n    POSITION: \"owner\",\r\n    PHONE: \"+1123456789\",\r\n    ONBOARD: \"82%\",\r\n    RATING: \"2\",\r\n    NOTE: \"icon\",\r\n    TAG: \"-\",\r\n  },\r\n  {\r\n    id: 2,\r\n    rolename: \"Sveltose\",\r\n    Status: \"Active\",\r\n    POSITION: \"owner\",\r\n    PHONE: \"+1123456789\",\r\n    ONBOARD: \"82%\",\r\n    RATING: \"2\",\r\n    NOTE: \"icon\",\r\n    TAG: \"-\",\r\n  },\r\n  {\r\n    id: 3,\r\n    rolename: \"Sveltose\",\r\n    Status: \"Active\",\r\n    POSITION: \"owner\",\r\n    PHONE: \"+1123456789\",\r\n    ONBOARD: \"82%\",\r\n    RATING: \"2\",\r\n    NOTE: \"icon\",\r\n    TAG: \"-\",\r\n  },\r\n  {\r\n    id: 4,\r\n    rolename: \"Sveltose\",\r\n    Status: \"Active\",\r\n    POSITION: \"owner\",\r\n    PHONE: \"+1123456789\",\r\n    ONBOARD: \"82%\",\r\n    RATING: \"2\",\r\n    NOTE: \"icon\",\r\n    TAG: \"-\",\r\n  },\r\n];\r\n\r\nexport const data = [\r\n  {\r\n    id: 1,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Driving licence \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 2,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 3,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Driving licence \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 4,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Driving licence \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 5,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 6,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 7,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 8,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 9,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 10,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 11,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 12,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 13,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 14,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 15,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Passport \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n  {\r\n    id: 16,\r\n    formId: \"167-161211\",\r\n    createDate: \"Jan 1, 2022\",\r\n    docName: \"Driving licence \",\r\n    access: \"admin\",\r\n    type: \"none\",\r\n  },\r\n];\r\n"],"sourceRoot":""}